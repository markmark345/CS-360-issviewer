

name: Issviewer CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs: 
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'


    # - uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.9.1'

    # - run: pip install ephem

    # - name: Start Redis
    #   uses: supercharge/redis-github-action@1.2.0
    #   with:
    #     redis-version: ${{ matrix.redis-version }}

    # - run: npm ci
    
    # - run: npm run build --if-present

    # - name: Install redis cli # so we can test the server
    #   run: sudo apt-get install -y redis-tools

    # - name: Verify that redis is up
    #   run: redis-cli ping
    
    # - run: npm test
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
 
    - name: Build and push to DockerHub
      if: success()
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: markmark345/cs360-issviewer-img
    
    - name: Configure AWS credentials
      if: success()
      uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
 
    - name: Create EC2 and deploy application to EC2
      if: success()
      env: 
          KEY_PAIR_NAME: ${{ secrets.AWS_KEYPAIR_NAME }}
          SECGROUP_ID: ${{ secrets.AWS_SECGROUP_ID }}
      run: aws ec2 run-instances --image-id ami-04902260ca3d33422 --instance-type t2.micro  --key-name $KEY_PAIR_NAME --security-group-ids $SECGROUP_ID --user-data file://script/user_data_script.txt